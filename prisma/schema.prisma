// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Status {
  new
  inProgress
  resolved
}

enum Priority {
  low
  medium
  high
}

model Ticket {
  id          String   @id @default(cuid())
  title       String
  description String?
  priority    Priority @default(medium)
  status      Status   @default(new)
  reporter    User?    @relation("TicketReporter", fields: [reporterId], references: [id])
  reporterId  String?
  responder   User?    @relation("TicketResponder", fields: [responderId], references: [id])
  responderId String?
  createdAt       DateTime @default(now()) @map(name: "created_at")


  @@map(name: "tickets")
}

model User {
  id              String   @id @default(cuid())
  name            String   @unique
  email           String   @unique
  password        String   @default("pass")
  isAdmin         Boolean  @default(false)
  createdAt       DateTime @default(now()) @map(name: "created_at")
  updatedAt       DateTime @updatedAt @map(name: "updated_at")
  ticketsAssigned Ticket[] @relation("TicketResponder")
  ticketsReported Ticket[] @relation("TicketReporter")

  @@map(name: "users")
}
